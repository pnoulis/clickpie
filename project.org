* About
This file acts as a project management tool and notepad for the clickpie devops
repository.

* resources
** Clickup homepage
https://clickup.com

** Clickup API documentation
https://clickup.com/api/

* Clickup
** The clickup API overview
clickup exposes its services through a REST API. One may use CURL to initiate a
one-off request to clickup.

For more complex integrations such as Webhooks, a bi-directional communication
channel is required. Such a channel is made possible only by exposing an API to
clickup through a server. If clickup is configured for bi-directional
communication with a REST API it will initiate a request each time an event
occurs for which a handler has been defined. The server then is responsible for
performing any side effects using clickup's REST API.

** Clickup API structure
prefix=https://api.clickup.com/api/v2

team=$prefix/team

** Clickup hierarchies
*** list 1-* tasks 1-* subtasks 1-* checklists
** Webhooks
https://clickup.com/api/developer-portal/webhooks/

* Ngrok
** About
Ngrok's is a service that exposes a local port to the world wide web through its
own dynamic domains. Through this service a local application may be quickly
tested under "real" conditions and shared to clients for a quick preview.
** Usage
ngrok http localhost[:port]

* Koa
** Koa response statuses
https://github.com/koajs/koa/blob/master/docs/api/response.md

* Software requirements
** Add new webhooks
** Delete webhooks
** List webhooks

* Tasks Board
** DONE Communicate with the clickup api
CLOSED: [2023-10-31 Tue 14:14]
** DONE include Authorization header token to an API Request
CLOSED: [2023-10-31 Tue 14:14]
** TODO Explore and extend functionality of the Graph class
** TODO implementing propagateStatus
Webhook -> clickup register URL to handle event
** TODO Find out what resource ID refers to in webhook fire event.
* Issues
** Emacs fails to add tabs when indenting rules if the file being parsed in not Makefile (for example, Makefile.in)
